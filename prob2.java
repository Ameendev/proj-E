/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

public class prob2{

//Set a constant number 4 million
public static final int MAX = 4000000;

//lets generate fib numbers to user specified amount
//filter the even numbers out
// sum the even numbers 
public static int evenFibSum(){
int index = 0;
int sum = 0;
int myArray[] = new int[MAX];
myArray[index] = 1;
index++;
myArray[index] = myArray[index-1] + myArray[index-1];
//if(myArray[index] % 2 == 0){
//sum += myArray[index];
//}

while (myArray[index] < MAX){
//System.out.println(myArray[index] + " ");
if(myArray[index] % 2 == 0 && myArray[index] < MAX){
sum += myArray[index];
		}
myArray[index+1] = myArray[index-1] + myArray[index];
index++;
	}	
return sum;
}
	public static void main(String[] args){
		
		prob2 obj = new prob2();
		int num = obj.evenFibSum();
		System.out.println(num);

	}


}


